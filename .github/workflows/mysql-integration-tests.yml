name: Iceberg Integration Tests

on:
  push:
    branches:
      - "feat/testing_framework"
  pull_request:
    branches:
      - "feat/testing_framework*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.2'
        
  

      # Start MySQL container
      - name: Start MySQL and related services
        run: |
          pushd ./drivers/mysql
          docker compose up -d
          popd

      # Start Iceberg services with proper network configuration
      - name: Start Iceberg-related services
        run: |
          pushd ./writers/iceberg/local-test
          docker compose up -d
          popd
    
      # Wait longer for services to be fully ready
      - name: Wait for services to be ready
        run: |
          echo "Waiting for services to initialize..."
          sleep 90
          echo "Services should be ready now"

      # Verify services are running and ports are mapped
      - name: Verify services and check for port conflicts
        run: |
          # Check running processes on port 8080
          echo "Checking processes on port 8080:"
          sudo lsof -i :8080 || echo "No process using port 8080"
          
          # Check all services
          docker ps -a
          echo "Checking MySQL:"
          docker ps | grep mysql && echo "MySQL is running" || echo "MySQL not found"
          echo "Checking Postgres:"
          docker ps | grep postgres && echo "Postgres is running" || echo "Postgres not found"
          docker exec iceberg-postgres pg_isready -U iceberg -d iceberg || echo "Postgres not ready"
          echo "Checking MinIO:"
          docker ps | grep minio && echo "MinIO is running" || echo "MinIO not found"
          echo "Checking Spark Iceberg:"
          docker ps | grep spark-iceberg && echo "Spark Iceberg is running" || echo "Spark Iceberg not found"
          
      - name: Check network and port mappings
        run: |
          docker network ls
          docker network inspect iceberg_network || echo "Network not found"
          echo "Postgres ports:"
          docker port iceberg-postgres || echo "No ports exposed for Postgres"
          echo "Spark ports:"
          docker port spark-iceberg || echo "No ports exposed for Spark"
      
      # Display logs for debugging
      - name: Show container logs for debugging
        run: |
          echo "Postgres logs:"
          docker logs iceberg-postgres
          echo "Spark logs:"
          docker logs spark-iceberg
      - name: Create data directories with proper permissions
        run: |
          sudo mkdir -p /home/runner/work/olake/olake/writers/iceberg/local-test/data/postgres-data
          sudo mkdir -p /home/runner/work/olake/olake/writers/iceberg/local-test/data/minio-data
          sudo mkdir -p /home/runner/work/olake/olake/writers/iceberg/local-test/data/ivy-cache
          sudo chown -R 999:999 /home/runner/work/olake/olake/writers/iceberg/local-test/data
          sudo chmod -R 777 /home/runner/work/olake/olake/writers/iceberg/local-test/data
      # Install go dependencies and build
      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      # Skip the Maven build if it's already in your local setup
      # Or keep it if still needed
      - name: Run Maven build
        run: |
          cd ./writers/iceberg/debezium-server-iceberg-sink
          mvn clean package -DskipTests

      # Run the integration tests with additional debug information
      - name: Run integration tests with debug info
        run: |
          go test -v ./drivers/mysql/internal/... -tags=integration --timeout 0
          
      - name: Show post-test logs
        if: always()
        run: |
          echo "Postgres logs after test:"
          docker logs iceberg-postgres
          echo "Spark logs after test:"
          docker logs spark-iceberg

      - name: Test connectivity between containers
        run: |
            # Test connection from spark-iceberg to postgres
            docker exec spark-iceberg bash -c "apt-get update && apt-get install -y netcat && nc -zv postgres 5432"
            # Test connection to Minio
            docker exec spark-iceberg bash -c "apt-get install -y curl && curl -v http://minio:9000"
        
          
      # Clean up containers when done
      - name: Clean up Docker containers
        if: always()
        run: |
          pushd ./writers/iceberg/local-test
          docker compose down
          popd
          
          pushd ./drivers/mysql
          docker compose down
          popd