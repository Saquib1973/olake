name: Iceberg Integration Tests

on:
  push:
    branches:
      - "feat/testing_framework"
  pull_request:
    branches:
      - "feat/testing_framework*"

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23.2'

      # Create data directories first to avoid permission issues
      - name: Create data directories with proper permissions
        run: |
          sudo mkdir -p /home/runner/work/olake/olake/writers/iceberg/local-test/data/postgres-data
          sudo mkdir -p /home/runner/work/olake/olake/writers/iceberg/local-test/data/minio-data
          sudo mkdir -p /home/runner/work/olake/olake/writers/iceberg/local-test/data/ivy-cache
          sudo chown -R 999:999 /home/runner/work/olake/olake/writers/iceberg/local-test/data
          sudo chmod -R 777 /home/runner/work/olake/olake/writers/iceberg/local-test/data

      # Start MySQL container
      - name: Start MySQL and related services
        run: |
          pushd ./drivers/mysql
          docker compose up -d
          popd

      # Start Iceberg services with proper network configuration
      - name: Start Iceberg-related services
        run: |
          pushd ./writers/iceberg/local-test
          docker compose up -d
          popd
    
      # Wait longer for services to be fully ready
      - name: Wait for services to be ready
        run: sleep 60

      # Verify services are running and ports are mapped
      - name: Verify MySQL is running
        run: |
          docker ps | grep mysql && echo "MySQL is running"

      - name: Verify Postgres is running
        run: |
          docker ps | grep postgres && echo "Postgres is running"
          docker exec iceberg-postgres pg_isready -U iceberg -d iceberg

      - name: Verify MinIO is running
        run: |
          docker ps | grep minio && echo "MinIO is running"

      - name: Verify Spark Iceberg is running
        run: |
          docker ps | grep spark-iceberg && echo "Spark Iceberg is running"
          
      - name: Check network and port mappings
        run: |
          docker network ls
          docker network inspect iceberg_network
          docker port iceberg-postgres
          docker port spark-iceberg
      
      # Install go dependencies and build
      - name: Install dependencies
        run: go mod download

      - name: Build
        run: go build -v ./...

      # Skip the Maven build if it's already in your local setup
      # Or keep it if still needed
      - name: Run Maven build
        run: |
          cd ./writers/iceberg/debezium-server-iceberg-sink
          mvn clean package -DskipTests

      # Run the integration tests with additional debug information
      - name: Run integration tests with debug info
        run: |
          docker logs iceberg-postgres
          docker logs spark-iceberg
          go test -v ./drivers/mysql/internal/... -tags=integration --timeout 0
          docker logs iceberg-postgres
          docker logs spark-iceberg
          
      # Clean up containers when done
      - name: Clean up Docker containers
        if: always()
        run: |
          pushd ./writers/iceberg/local-test
          docker compose down
          popd
          
          pushd ./drivers/mysql
          docker compose down
          popd